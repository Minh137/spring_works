/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2024-11-25 08:02:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.layouts;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class layout_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.4.11.jar", Long.valueOf(1728289159499L));
    _jspx_dependants.put("jar:file:/C:/spring_works/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/comunity/WEB-INF/lib/spring-security-taglibs-5.4.11.jar!/META-INF/security.tld", Long.valueOf(1679304544000L));
    _jspx_dependants.put("/WEB-INF/lib/tiles-jsp-3.0.8.jar", Long.valueOf(1727141427822L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1725514167351L));
    _jspx_dependants.put("jar:file:/C:/spring_works/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/comunity/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/spring_works/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/comunity/WEB-INF/lib/tiles-jsp-3.0.8.jar!/META-INF/tld/tiles-jsp.tld", Long.valueOf(1506773284000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <title>");
      if (_jspx_meth_tiles_005fgetAsString_005f0(_jspx_page_context))
        return;
      out.write("</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/comunity/res/css/bootstrap.min.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/comunity/res/css/style.css\" />\r\n");
      out.write("    \r\n");
      out.write("    <!-- script -->\r\n");
      out.write("    <script src=\"/comunity/res/js/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"/comunity/res/js/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"/comunity/res/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"/comunity/res/js/regex.js\"></script>\r\n");
      out.write("    <script src=\"/comunity/res/js/script.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("<!-- firebase -->\r\n");
      out.write("    <script src=\"https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js\"></script>\r\n");
      out.write("    <script src=\"https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js\"></script>\r\n");
      out.write("    <script src=\"https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js\"></script>\r\n");
      out.write("    <script src=\"/comunity/res/js/firebase.js\"></script>\r\n");
      out.write("    ");
      if (_jspx_meth_sec_005fauthorize_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    ");
      if (_jspx_meth_sec_005fauthorize_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("     <div class=\"container\"> \r\n");
      out.write("        <div class=\"bg-white rounded p-3  shadow-sm\">      \r\n");
      out.write("           ");
      if (_jspx_meth_tiles_005finsertAttribute_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        </div>   \r\n");
      out.write("        <div class=\"row align-items-stretch\">\r\n");
      out.write("           <div class=\"col-md-3 col-12 my-3\">\r\n");
      out.write("              <div class=\"aside bg-white rounded p-3 shadow-sm\">\r\n");
      out.write("                  ");
      if (_jspx_meth_tiles_005finsertAttribute_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("              </div>\r\n");
      out.write("           </div>\r\n");
      out.write("           <div class=\"col-md-9 col-12\">\r\n");
      out.write("                ");
      if (_jspx_meth_tiles_005finsertAttribute_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("           </div>\r\n");
      out.write("        </div> \r\n");
      out.write("        <div class=\"bg-white rounded p-3 mt-3  shadow-sm\">  \r\n");
      out.write("          ");
      if (_jspx_meth_tiles_005finsertAttribute_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        </div>  \r\n");
      out.write("     </div>  \r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_tiles_005fgetAsString_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tiles:getAsString
    org.apache.tiles.jsp.taglib.GetAsStringTag _jspx_th_tiles_005fgetAsString_005f0 = new org.apache.tiles.jsp.taglib.GetAsStringTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tiles_005fgetAsString_005f0);
    try {
      _jspx_th_tiles_005fgetAsString_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/views/layouts/layout.jsp(11,11) name = name type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_tiles_005fgetAsString_005f0.setName("title");
      _jspx_th_tiles_005fgetAsString_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tiles_005fgetAsString_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f0 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f0_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f0.setParent(null);
      // /WEB-INF/views/layouts/layout.jsp(27,4) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f0.setAccess("!isAuthenticated()");
      int _jspx_eval_sec_005fauthorize_005f0 = _jspx_th_sec_005fauthorize_005f0.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("       <script>\r\n");
        out.write("          function sendMessage(){\r\n");
        out.write("            alert(\"로그인 하세요.\");\r\n");
        out.write("          }\r\n");
        out.write("       </script>\r\n");
        out.write("    ");
      }
      if (_jspx_th_sec_005fauthorize_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f0);
      _jspx_th_sec_005fauthorize_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fauthorize_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:authorize
    org.springframework.security.taglibs.authz.JspAuthorizeTag _jspx_th_sec_005fauthorize_005f1 = (org.springframework.security.taglibs.authz.JspAuthorizeTag) _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.get(org.springframework.security.taglibs.authz.JspAuthorizeTag.class);
    boolean _jspx_th_sec_005fauthorize_005f1_reused = false;
    try {
      _jspx_th_sec_005fauthorize_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fauthorize_005f1.setParent(null);
      // /WEB-INF/views/layouts/layout.jsp(34,4) name = access type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_sec_005fauthorize_005f1.setAccess("isAuthenticated()");
      int _jspx_eval_sec_005fauthorize_005f1 = _jspx_th_sec_005fauthorize_005f1.doStartTag();
      if (_jspx_eval_sec_005fauthorize_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write("\r\n");
        out.write("       <script>\r\n");
        out.write("          const userid = '");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("';\r\n");
        out.write("          const username = '");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("';\r\n");
        out.write("\r\n");
        out.write("          function sendMessage(){\r\n");
        out.write("            const recipientId = document.getElementById('recipient-id').value; \r\n");
        out.write("            const recipientName = document.getElementById('recipient-name').value;\r\n");
        out.write("            const messageContent = document.getElementById('message').value;\r\n");
        out.write("            if(messageContent.trim() !== '' && recipientId.trim()!=='' && recipientName.trim()!==''){\r\n");
        out.write("               db.collection('messages').add({\r\n");
        out.write("                 content: messageContent,\r\n");
        out.write("                 senderId: userid,\r\n");
        out.write("                 senderName: username,\r\n");
        out.write("                 recipientId: recipientId,\r\n");
        out.write("                 recipientName : recipientName,\r\n");
        out.write("                 timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n");
        out.write("               }).then(()=>{\r\n");
        out.write("                  //입력 창 초기화\r\n");
        out.write("                  document.getElementById('recipient-id').value = '';\r\n");
        out.write("                  document.getElementById('recipient-name').value = '';\r\n");
        out.write("                  document.getElementById('message').value = '';\r\n");
        out.write("                  alert('메시지가 성공적으로 전송되었습니다.');\r\n");
        out.write("               }).catch((error)=>{\r\n");
        out.write("                  console.error('메시지 전송 중 오류가 발생했습니다.', error);\r\n");
        out.write("               })\r\n");
        out.write("            }else{\r\n");
        out.write("               alert(\"모든 필드를 작성해 주세요.\");\r\n");
        out.write("            }\r\n");
        out.write("          }\r\n");
        out.write("          \r\n");
        out.write("          //받은 메시지 목록 업데이트\r\n");
        out.write("          db.collection('messages').where('recipientId', '==', userid).onSnapshot((snapshot)=>{\r\n");
        out.write("               const messageCount = snapshot.size;\r\n");
        out.write("               document.getElementById(\"message-count\").textContent \r\n");
        out.write("                    = messageCount > 0 ? messageCount : '';\r\n");
        out.write("            });\r\n");
        out.write("\r\n");
        out.write("		\r\n");
        out.write("          db.collection(\"messages\")\r\n");
        out.write("          .where(\"recipientId\", \"==\", userid)\r\n");
        out.write("          .orderBy(\"timestamp\", \"desc\")\r\n");
        out.write("          .onSnapshot((snapshot) => {\r\n");
        out.write("            const messageList = document.getElementById(\"message-list\");\r\n");
        out.write("\r\n");
        out.write("            if (!messageList) {\r\n");
        out.write("              console.error(\"message-list element not found\");\r\n");
        out.write("              return;\r\n");
        out.write("            }\r\n");
        out.write("\r\n");
        out.write("            // 기존 메시지 초기화\r\n");
        out.write("            messageList.innerHTML = \"\";\r\n");
        out.write("\r\n");
        out.write("            if (snapshot.empty) { // 스냅샷이 비어있으면\r\n");
        out.write("              const noMessageItem = document.createElement(\"li\");\r\n");
        out.write("              noMessageItem.className = \"list-group-item\";\r\n");
        out.write("              noMessageItem.textContent = \"받은 메시지가 없습니다.\";\r\n");
        out.write("              messageList.appendChild(noMessageItem);\r\n");
        out.write("            } else {\r\n");
        out.write("              snapshot.forEach((doc) => {\r\n");
        out.write("                const mymessage = doc.data();\r\n");
        out.write("\r\n");
        out.write("                // Firebase Timestamp 변환\r\n");
        out.write("                const timestamp = mymessage.timestamp;\r\n");
        out.write("                const date = timestamp ? new Date(timestamp.seconds * 1000) : new Date();\r\n");
        out.write("                const formattedDate = date.toLocaleString();\r\n");
        out.write("\r\n");
        out.write("                // 메시지 아이템 생성\r\n");
        out.write("                const messageItem = document.createElement(\"li\");\r\n");
        out.write("                messageItem.className = \"list-group-item\";\r\n");
        out.write("\r\n");
        out.write("                // 메시지 내용을 수동으로 추가\r\n");
        out.write("                const senderInfo = document.createElement(\"p\");\r\n");
        out.write("                senderInfo.innerHTML =\r\n");
        out.write("                  \"보낸 사람: <strong>\" + mymessage.senderName + \"</strong> (ID: \" + mymessage.senderId + \")\";\r\n");
        out.write("                messageItem.appendChild(senderInfo);\r\n");
        out.write("\r\n");
        out.write("                const recipientInfo = document.createElement(\"p\");\r\n");
        out.write("                recipientInfo.innerHTML =\r\n");
        out.write("                  \"받은 사람: <strong>\" + mymessage.recipientName + \"</strong> (ID: \" + mymessage.recipientId + \")\";\r\n");
        out.write("                messageItem.appendChild(recipientInfo);\r\n");
        out.write("\r\n");
        out.write("                const contentInfo = document.createElement(\"p\");\r\n");
        out.write("                contentInfo.innerHTML = \"내용: <strong>\" + mymessage.content + \"</strong>\";\r\n");
        out.write("                messageItem.appendChild(contentInfo);\r\n");
        out.write("\r\n");
        out.write("                const timeInfo = document.createElement(\"p\");\r\n");
        out.write("                timeInfo.innerHTML = \"전송 시간: <strong>\" + formattedDate + \"</strong>\";\r\n");
        out.write("                messageItem.appendChild(timeInfo);\r\n");
        out.write("\r\n");
        out.write("                // 메시지 리스트에 추가\r\n");
        out.write("                messageList.appendChild(messageItem);\r\n");
        out.write("              });\r\n");
        out.write("            }\r\n");
        out.write("          });\r\n");
        out.write("\r\n");
        out.write("		</script>\r\n");
        out.write("    ");
      }
      if (_jspx_th_sec_005fauthorize_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fauthorize_0026_005faccess.reuse(_jspx_th_sec_005fauthorize_005f1);
      _jspx_th_sec_005fauthorize_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fauthorize_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fauthorize_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_tiles_005finsertAttribute_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tiles:insertAttribute
    org.apache.tiles.jsp.taglib.InsertAttributeTag _jspx_th_tiles_005finsertAttribute_005f0 = new org.apache.tiles.jsp.taglib.InsertAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tiles_005finsertAttribute_005f0);
    try {
      _jspx_th_tiles_005finsertAttribute_005f0.setJspContext(_jspx_page_context);
      // /WEB-INF/views/layouts/layout.jsp(136,11) name = name type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_tiles_005finsertAttribute_005f0.setName("header");
      _jspx_th_tiles_005finsertAttribute_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tiles_005finsertAttribute_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_tiles_005finsertAttribute_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tiles:insertAttribute
    org.apache.tiles.jsp.taglib.InsertAttributeTag _jspx_th_tiles_005finsertAttribute_005f1 = new org.apache.tiles.jsp.taglib.InsertAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tiles_005finsertAttribute_005f1);
    try {
      _jspx_th_tiles_005finsertAttribute_005f1.setJspContext(_jspx_page_context);
      // /WEB-INF/views/layouts/layout.jsp(141,18) name = name type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_tiles_005finsertAttribute_005f1.setName("aside");
      _jspx_th_tiles_005finsertAttribute_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tiles_005finsertAttribute_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_tiles_005finsertAttribute_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tiles:insertAttribute
    org.apache.tiles.jsp.taglib.InsertAttributeTag _jspx_th_tiles_005finsertAttribute_005f2 = new org.apache.tiles.jsp.taglib.InsertAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tiles_005finsertAttribute_005f2);
    try {
      _jspx_th_tiles_005finsertAttribute_005f2.setJspContext(_jspx_page_context);
      // /WEB-INF/views/layouts/layout.jsp(145,16) name = name type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_tiles_005finsertAttribute_005f2.setName("body");
      _jspx_th_tiles_005finsertAttribute_005f2.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tiles_005finsertAttribute_005f2);
    }
    return false;
  }

  private boolean _jspx_meth_tiles_005finsertAttribute_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  tiles:insertAttribute
    org.apache.tiles.jsp.taglib.InsertAttributeTag _jspx_th_tiles_005finsertAttribute_005f3 = new org.apache.tiles.jsp.taglib.InsertAttributeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_tiles_005finsertAttribute_005f3);
    try {
      _jspx_th_tiles_005finsertAttribute_005f3.setJspContext(_jspx_page_context);
      // /WEB-INF/views/layouts/layout.jsp(149,10) name = name type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_tiles_005finsertAttribute_005f3.setName("footer");
      _jspx_th_tiles_005finsertAttribute_005f3.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_tiles_005finsertAttribute_005f3);
    }
    return false;
  }
}
